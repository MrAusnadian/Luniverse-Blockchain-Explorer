@page "/"
@inject IEthereumService _ethereumService 

<div class="container">
    <div class="row">
        <div class="col">
            <h2>Ethereum Blockchain Explorer</h2>
        </div>
        <div class="col">
            <p>
                Latest Block Number: @_latestBlockNumber
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <div class="row">
                <label>Block number:</label>
            </div>
            @if (_invalidParse)
            {
                <div class="row">
                    <label>Block number should only contain numbers</label>
                </div>
            }
        </div>
        <div class="col-4">
            <input @bind-value="@_blockNumberString" @bind-value:event="oninput"/>
        </div>
        <div>
            <button @onclick="GetBlockInfo">
                Search!
            </button>
        </div>
    </div>
    <div class="row">
        @if (_latestBlockNumber != null)
        {
            <LatestBlocksAndTransactions LatestBlockNumber="_latestBlockNumber"/>
        }
    </div>
</div>

@code {
    private Nethereum.Hex.HexTypes.HexBigInteger _latestBlockNumber = null;
    private string _blockNumberString;
    private int _blockNumber;
    private bool _invalidParse = false;

    protected override async Task OnInitializedAsync()
    {
        _latestBlockNumber = await _ethereumService.GetLatestBlockNumber();
    }

    public void GetBlockInfo()
    {
        try
        {
            _blockNumber = Int32.Parse(_blockNumberString);
            if (_invalidParse)
            {
                _invalidParse = false;
                this.StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            _invalidParse = true;
        }
    }
}
