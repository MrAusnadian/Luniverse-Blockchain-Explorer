@inject IEthereumService _ethereumService

<div class="container">
    <div class="row">
        <div class="col-6">
            <h3>
                Latest Blocks
            </h3>
            <div class="row">
                @if (hasLoaded)
                {
                    @foreach (BlockWithTransactions block in _blockWithTransactions)
                    {
                        <div class="card">
                            <a href="/Block/@block.Number">
                                <p>
                                    <b>Block Number:</b> @block.Number
                                </p>
                                <p>
                                    <b>Miner:</b> @block.Miner
                                </p>
                                <p>
                                    <b>Transactions:</b> @block.TransactionCount()
                                </p>
                            </a>
                        </div>
                   }
                }
           </div>
        </div>
        <div class="col-6">
            <h3>
                Latest Transactions
            </h3>
            <div class="row">
                @if (hasLoaded)
                {
                    @foreach (Transaction transaction in _latest5Transactions)
                    {
                        <div class="card">
                            <a href="/Transaction/@transaction.TransactionHash">
                                <p>
                                    <b>Transaction Hash:</b> @transaction.TransactionHash
                                </p>
                                <p>
                                    <b>From:</b> @transaction.From
                                </p>
                                <p>
                                    <b>To:</b> @transaction.To
                                </p>
                                <p>
                                    <b>Value:</b> @transaction.Value
                                </p>
                            </a>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Nethereum.Hex.HexTypes.HexBigInteger LatestBlockNumber { get; set; }

    private bool hasLoaded = false;
    private List<BlockWithTransactions> _blockWithTransactions = new List<BlockWithTransactions>();
    private Transaction[] _latest5Transactions;

    protected override async Task OnInitializedAsync()
    {
        _blockWithTransactions = await _ethereumService.GetLatest5BlocksInfo(LatestBlockNumber);
        _latest5Transactions = _blockWithTransactions.First().Transactions.Take(5).ToArray();
        hasLoaded = true;
    }
}
