@inject IEthereumService _ethereumService

<div class="container">
    <div class="row">
        <div class="col-6">
            <h3>
                Latest Blocks
            </h3>
            <div class="row custom-block-border">
                @if (hasLoaded)
                {
                    @foreach (BlockWithTransactions block in _blockWithTransactions)
                    {
                        <div class="card">
                            <div class="row">
                                <p>
                                    <b>Block Number:</b> @block.Number
                                </p>
                            </div>
                            <div class="row">
                                <p>
                                    <b>Miner:</b> @block.Miner
                                </p>
                            </div>
                            <div class="row">
                                <p>
                                    <b>Transactions:</b> @block.TransactionCount()
                                </p>
                            </div>
                        </div>
                   }
                }
           </div>
        </div>
        <div class="col-6">
            <h3>
                Latest Transactions
            </h3>
            <div class="row custom-block-border">
                @if (hasLoaded)
                {
                    @foreach (Transaction transaction in _latestTransactions)
                    {
                        <div class="row">
                            <p>
                                Transaction Hash: @transaction.TransactionHash
                            </p>
                        </div>
                        <div class="row">
                            <p>
                                From: @transaction.From
                            </p>
                        </div>
                        <div class="row">
                            <p>
                                To: @transaction.To
                            </p>
                        </div>
                        <div class="row">
                            <p>
                                Value: @transaction.Value
                            </p>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Nethereum.Hex.HexTypes.HexBigInteger LatestBlockNumber { get; set; }

    private bool hasLoaded = false;
    private List<BlockWithTransactions> _blockWithTransactions = new List<BlockWithTransactions>();
    private Transaction[] _latestTransactions;

    protected override async Task OnInitializedAsync()
    {
        _blockWithTransactions = await _ethereumService.GetLatest5BlocksInfo(LatestBlockNumber);
        _latestTransactions = _blockWithTransactions.First().Transactions;
        hasLoaded = true;
    }
}
